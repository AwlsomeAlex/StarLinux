################################
#                              #
# Star Package Manager Library #
#                              #
################################
# Created by AwlsomeAlex [GPLv3]
# Compatible with StarOS & Star Library

SPML_VER="GIT-20180211-003"
START_DIR=$(pwd)
REPO_DIR=/tmp/spm/repo


RD='\033[1;31m'
GN='\033[1;32m'
YW='\033[1;33m'
NC='\033[0m'



###################
# Child Functions #
###################
# Set of Functions to help aid 
# Primary Functions in SPM

# Function which assures the User the Library was Downloaded.
function assurance() {
    echo ""
    echo "======================================================="
    echo -e " ${GN}Star Package Manager $SPML_VER Library Loaded.${NC}"
    echo "======================================================="
    echo ""
    if [[ ! $SPML_VER == $SPM_VER ]]; then
	echo -e "${RD}WARNING:${NC} The Executable '$SPM_VER' is a different version than the Library '$SPML_VER'. Proceed with caution!"
    fi
}

# SPM-Modified Download Function
function download() {
	## Created by AwlsomeAlex [GNU GPLv3]
	## User-Friendly and Noise-Free Downloader powered by wget
	## Modified for easy download of StarOS Repository
	FILE=$1
	TICKER=$2
	if [[ $FILE == "StarOS" ]]; then
		wget https://github.com/AwlsomeAlex/StarLinux/archive/StarOS.zip -q --show-progress
	elif [[ $FILE == "" ]]; then
		echo -e "${RD}Usage: download [file] [options]"
        echo -e "Option: -s (Silent Download Option)"
        echo -e "File: StarOS | Download Link${NC}"
	else
		if [[ $TICKER == "-s" ]]; then
			wget $FILE -q
		else
			wget $FILE -q --show-progress
		fi
	fi
}

# Command to Test Certain Functionality of SPM
function test() {
    echo "Hello World."
}


#####################
# Primary Functions #
#####################
# Functions which SPM is designed
# to execute, like package building.

# Update SPM Repository
function update() {
	if [ -d /tmp/spm ]; then
		rm -rf /tmp/spm
	fi
	mkdir -p /tmp/spm/repo
	cd /tmp/spm
	download StarOS
	unzip -q StarOS
	rm -rf StarOS.zip
	cp -r StarLinux-StarOS/spm/repo/* repo/
	rm -rf StarLinux-StarOS
	if [[ $(cat repo/version.txt) == $SPML_VER ]]; then
		echo "SPM Repository has been updated to $(cat repo/version.txt)"
	else
		echo -e "${RD}ERROR:${NC} Either the GIT Repository is behind or the Library is outdated. Please update the Library with './spm update-lib' and try again!"
		cd $START_DIR
		#rm -rf /tmp/spm
		exit 0
	fi
}

# Build StarOS Package
function build() {
	update
	if [[ $PACKAGE == "" ]]; then
		echo -e "${RD}ERROR:${NC} No Package Defined."
		exit 0
	fi
	if [ ! -d $REPO_DIR/$PACKAGE ]; then
		echo -e "${RD}ERROR:${NC} Invalid Package '$PACKAGE.'"
		exit 0
	fi
	cd $REPO_DIR/$PACKAGE
	./build.sh
}


#################
# Main Function #
#################
# Main User-Executed 
# Function loaded at runtime.
function main() {
	case "$COMMAND" in
		update)
			update
			;;
		update-lib)
			update-lib-linux
			;;
		build)
			build
			;;
		*)
			echo -e "${RD}Usage $0 [update, update-lib, build]"
			echo -e "Commands:"
			echo -e "	update:			Updates SPM Repository"
			echo -e "	update-lib:		Updates SPM Function Library"
			echo -e "	build:			Build Package for StarOS${NC}"
	esac
}
