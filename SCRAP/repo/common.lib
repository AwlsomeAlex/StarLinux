#########################################
#---------------------------------------#
# Star Package Builder - Common Library #
#---------------------------------------#
#########################################
# Created by AwlsomeAlex [GNU GPLv3]
# Heavily Inspired by Ivandavidov's common.sh for Overlays


#############
# Functions #
#############

# message: Displays a custom color-coded message for User Output
function message() (
	option=$1
	message=$2
	if [ "$option" = "" ]; then
		echo -e "${RC}Usage: message [option] [message]"
		echo -e "Option: WARN, ERROR, ...., DONE"
		echo -e "Message: Displays Text for Certain Messages${NC}"
	elif [ "$option" = "WARN" ]; then
		echo ""
		echo "==============="
		echo -e "| ${RD} !!! WARNING !!! ${NC} |"
		echo "==============="
		echo $message
	elif [ "option" = "ERROR" ]; then
		echo ""
		echo "==============="
		echo -e "| ${RD} !!! ERROR !!! ${NC} |"
		echo "==============="
		echo $message
		echo ""
		exit 72
	elif [ "$option" = "...." ]; then
		echo -e "${BL}(****) ${NC} $message"
	elif [ "$option" = "DONE" ]; then
		echo -e "${GN}(DONE) ${NC} $message"
	else
		echo -e "${RC}Usage: message [option] [message]"
		echo -e "Option: WARN, ERROR, ...., DONE"
		echo -e "Message: Displays Text for Certain Messages${NC}"
	fi
)


# download: Downloads a file from the SPM Repository
function download() (
	## Created by AwlsomeAlex [GNU GPLv3]
	## User-Friendly and Noise-Free Downloader powered by wget
	LINK=$1
	FILE=$2
	if [ "$LINK" = "" ]; then
		echo -e "${RD}Usage: download [link] [file]${NC}"
	else
		wget -P $FILE $LINK -q --show-progress
	fi
)

# read_config: Reads the Master Configuration File included with the Downloaded Repository
function read_config() (
	VAR_NAME=$1
	VAR_VALUE=
	if [ ! "VAR_NAME" = "" ]; then
		VAR_VALUE="`grep -i ^${VAR_NAME}= $CONFIG_FILE | cut -f2- -d'=' | xargs`"
	else
		message ERROR "read_config: Variable Name Not Defined!"
	fi
	if [ "VAR_VALUE" = "" ]; then
		message ERROR "read_config: Variable $VAR_NAME returned no value!"
	fi
	echo "$VAR_VALUE"
)

# depends: Checks if a dependency package is built
function depends() (
	PACKAGE=$1
	if [ "$PACKAGE" = "Protostar" ]; then
		if [ ! -d $MAIN_DIR ]; then
			message ERROR "The Protostar Directory could not be found! Please run 'spb build protostar' to generate them!"
		fi
	elif [ ! -d $WORK_DIR/$PACKAGE* ]; then
		message ERROR "Dependency '$PACKAGE' is missing! Please build it with 'spb build $PACKAGE'."
	fi
)

# download_source: Downloads a Source Tarball of a package
function download_source() (
	PACKAGE=$1
	download "`read_config $PACKAGE`-LINK" $SRC_DIR
)

#############
# Variables #
#############
export REPO_LINK="https://github.com/AwlsomeAlex/StarLinux/archive/protostar.zip" # Allows for Custom Repositories
export REPO_DIR="/tmp/spm/repo" # Only Directory NOT configured in Main Configuration
export CONFIG_FILE="$REPO_DIR/starlinux.config" # Can change StarLinux to another file for Custom Configuration Files
export MAIN_DIR="`read_config MAIN_DIR`"
export WORK_DIR="`read_config WORK_DIR`"
export SRC_DIR="`read_config SRC_DIR`"
export FINAL_DIR="`read_config FINAL_DIR`"
JOB_FACTOR="`read_config JOB_FACTOR`"
NUM_CORES="$(grep ^processor /proc/cpuinfo | wc -l)"
export NUM_JOBS="$((NUM_CORES * JOB_FACTOR))"
export CFLAGS="`read_config CFLAGS`"
export VERSION="`read_config VERSION`"
export BUILD_NUMBER="`read_config BUILD_NUMBER`"
export CODENAME="`read_config CODENAME`"

RD='\033[1;31m'
GN='\033[1;32m'
YW='\033[1;33m'
BL='\033[1;34m'
NC='\033[0m'
